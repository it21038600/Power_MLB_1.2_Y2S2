Bubble Sort

A=[]
for i in range (1,8) :
    A.append(int(input('Enter the number ')))


print (A)




def bubbleSort(A):
    n = len(A)


    for i in range (1,n):
        for j in range (1,n-i+1):
            if A[j] < A[j-1]:
                A[j],A[j-1]=A[j-1],A[j]


bubbleSort(A)
print (A)


Insertion Sort
A=[]
for i in range (1,8) :
    A.append(int(input('Enter the number ')))


print (A)


#insertion sort algorythm


def insertionSort(A):
    for i in range (1,len(A)):
        key = A[i]
        j = i-1


        while j>= 0 and A[j] > key :
            A[j+1] = A[j]
            j-= 1;
        A[j+1] = key


insertionSort(A)
print (A)


Quick Sort
A=[]
for i in range (1,8) :
    A.append(int(input('Enter the number ')))


print (A)


#partition def....... divide the array in to two parts
def partition(A,low, high):
    i = low -1
    pivot = A[high]
    for j in range (low, high):
        if A[j]<=pivot:
            i+= 1
            A[i],A[j] = A[j],A[i]
    A[i+1],A[high] = A[high],A[i+1]
    return (i+1)


def quickSort (A, low, high) :
    if low < high :
        q = partition(A,low,high)
        quickSort(A,low,q-1)
        quickSort(A,q+1,high)


quickSort(A, 0, len(A)-1)


print(A)


Selection Sort
A=[]
for i in range (1,8) :
    A.append(int(input('Enter the number ')))


print (A)


#selection sort....


def selectionSort(A):
    n = len(A)
    
    for i in range (0,n):
        smallest = i


        for j in range (i+1,n):
            if A[j] < A[smallest]:
                smallest = j
        
        hold = A[smallest]
        A[smallest] = A[i]
        A[i] = hold


selectionSort(A)
print (A)

